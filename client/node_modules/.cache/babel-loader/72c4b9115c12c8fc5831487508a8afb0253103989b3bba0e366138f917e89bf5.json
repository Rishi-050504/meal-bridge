{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sravy\\\\Desktop\\\\meal-bridge\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './Login.css';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [rememberMe, setRememberMe] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     // Dummy logic – replace with API call\n//     if (email === 'user@example.com' && password === 'password') {\n//       localStorage.setItem('token', 'dummy-auth-token');\n//       if (rememberMe) {\n//         localStorage.setItem('rememberMe', true);\n//       }\n//       navigate('/');\n//     } else {\n//       alert('Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <div className=\"login-image-section\" />\n\n//       <div className=\"login-form-section\">\n//         <div className=\"login-form-box\">\n//           <h2>Welcome Back</h2>\n//           <p>Please log in to continue</p>\n\n//           <form onSubmit={handleLogin}>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Email address\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               required\n//             />\n\n//             <input\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n\n//             <div className=\"login-options\">\n//               <label>\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={rememberMe}\n//                   onChange={(e) => setRememberMe(e.target.checked)}\n//                 />\n//                 Remember me\n//               </label>\n\n//               <Link to=\"/forgot-password\" className=\"forgot-link\">Forgot password?</Link>\n//             </div>\n\n//             <button type=\"submit\">Login</button>\n//           </form>\n\n//           <p className=\"signup-link\">\n//             Don't have an account? <Link to=\"/signup\">Sign up</Link>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport './Login.css';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // ✅ Correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        localStorage.setItem('token', data.token);\n        if (rememberMe) {\n          localStorage.setItem('rememberMe', true);\n        }\n        const decoded = jwtDecode(data.token);\n        const userId = decoded.id || decoded._id;\n        navigate(`/profile/${userId}`);\n      } else {\n        alert(data.message || 'Login failed');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-image-section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please log in to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email address\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: rememberMe,\n                onChange: e => setRememberMe(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), \"Remember me\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/forgot-password\",\n              className: \"forgot-link\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signup-link\",\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JpMHtOS1Czg2+Y3NjdW1vabeH9A=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jwtDecode","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","rememberMe","setRememberMe","navigate","handleLogin","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","decoded","userId","id","_id","alert","message","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","checked","to","_c","$RefreshReg$"],"sources":["C:/Users/Sravy/Desktop/meal-bridge/client/src/pages/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './Login.css';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [rememberMe, setRememberMe] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Dummy logic – replace with API call\r\n//     if (email === 'user@example.com' && password === 'password') {\r\n//       localStorage.setItem('token', 'dummy-auth-token');\r\n//       if (rememberMe) {\r\n//         localStorage.setItem('rememberMe', true);\r\n//       }\r\n//       navigate('/');\r\n//     } else {\r\n//       alert('Invalid credentials');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <div className=\"login-image-section\" />\r\n\r\n//       <div className=\"login-form-section\">\r\n//         <div className=\"login-form-box\">\r\n//           <h2>Welcome Back</h2>\r\n//           <p>Please log in to continue</p>\r\n\r\n//           <form onSubmit={handleLogin}>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email address\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               required\r\n//             />\r\n\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               required\r\n//             />\r\n\r\n//             <div className=\"login-options\">\r\n//               <label>\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={rememberMe}\r\n//                   onChange={(e) => setRememberMe(e.target.checked)}\r\n//                 />\r\n//                 Remember me\r\n//               </label>\r\n\r\n//               <Link to=\"/forgot-password\" className=\"forgot-link\">Forgot password?</Link>\r\n//             </div>\r\n\r\n//             <button type=\"submit\">Login</button>\r\n//           </form>\r\n\r\n//           <p className=\"signup-link\">\r\n//             Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport './Login.css';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode'; // ✅ Correct import\r\n  \r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        localStorage.setItem('token', data.token);\r\n        if (rememberMe) {\r\n          localStorage.setItem('rememberMe', true);\r\n        }\r\n\r\n        const decoded = jwtDecode(data.token);\r\n        const userId = decoded.id || decoded._id;\r\n\r\n        navigate(`/profile/${userId}`);\r\n      } else {\r\n        alert(data.message || 'Login failed');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      alert('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-image-section\" />\r\n\r\n      <div className=\"login-form-section\">\r\n        <div className=\"login-form-box\">\r\n          <h2>Welcome Back</h2>\r\n          <p>Please log in to continue</p>\r\n\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email address\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <div className=\"login-options\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={rememberMe}\r\n                  onChange={(e) => setRememberMe(e.target.checked)}\r\n                />\r\n                Remember me\r\n              </label>\r\n\r\n              <Link to=\"/forgot-password\" className=\"forgot-link\">Forgot password?</Link>\r\n            </div>\r\n\r\n            <button type=\"submit\">Login</button>\r\n          </form>\r\n\r\n          <p className=\"signup-link\">\r\n            Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}