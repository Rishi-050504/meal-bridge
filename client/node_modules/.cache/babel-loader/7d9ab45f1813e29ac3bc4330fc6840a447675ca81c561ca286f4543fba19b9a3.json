{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Required for redirection\n// import './Donate.css';\n\n// const Donate = () => {\n//   const navigate = useNavigate();\n\n//   const [formData, setFormData] = useState({\n//     locality: '',\n//     items: [{ name: '', quantity: '' }],\n//     timeBeforeConsumption: '',\n//     donorName: '',\n//     donorPhone: '',\n//     donorEmail: '',\n//     donorAddress: '',\n//     image: null\n//   });\n\n//   const [imagePreview, setImagePreview] = useState(null);\n\n//   const handleItemChange = (index, event) => {\n//     const newItems = [...formData.items];\n//     newItems[index][event.target.name] = event.target.value;\n//     setFormData({ ...formData, items: newItems });\n//   };\n\n//   const addItemField = () => {\n//     setFormData({ ...formData, items: [...formData.items, { name: '', quantity: '' }] });\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value, files } = e.target;\n//     if (name === 'image') {\n//       const file = files[0];\n//       setFormData({ ...formData, image: file });\n//       setImagePreview(URL.createObjectURL(file)); // Preview URL\n//     } else {\n//       setFormData({ ...formData, [name]: value });\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log(formData);\n\n//     // Here you can POST formData to a server or context/store\n\n//     // Redirect to donations page\n//     navigate('/donations');\n//   };\n\n//   return (\n//     <div className=\"donate-container\">\n//       <form className=\"donate-form\" onSubmit={handleSubmit}>\n//         <div className=\"form-group locality-select\">\n//           <label>Select your locality:</label>\n//           <select name=\"locality\" value={formData.locality} onChange={handleChange} required>\n//             <option value=\"\">-- Select Locality --</option>\n//             <option value=\"Central\">Central</option>\n//             <option value=\"North\">North</option>\n//             <option value=\"East\">East</option>\n//             <option value=\"South\">South</option>\n//             <option value=\"West\">West</option>\n//           </select>\n//         </div>\n\n//         <div className=\"form-group items-grid\">\n//           <label>Item(s):</label>\n//           {formData.items.map((item, index) => (\n//             <div key={index} className=\"item-row\">\n//               <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 placeholder=\"Item Name\"\n//                 value={item.name}\n//                 onChange={(e) => handleItemChange(index, e)}\n//                 required\n//               />\n//               <input\n//                 type=\"text\"\n//                 name=\"quantity\"\n//                 placeholder=\"Quantity\"\n//                 value={item.quantity}\n//                 onChange={(e) => handleItemChange(index, e)}\n//                 required\n//               />\n//             </div>\n//           ))}\n//           <button type=\"button\" onClick={addItemField} className=\"add-item-btn\">\n//             + Add another item\n//           </button>\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Time before they can be consumed:</label>\n//           <input\n//             type=\"datetime-local\"\n//             name=\"timeBeforeConsumption\"\n//             value={formData.timeBeforeConsumption}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Upload picture:</label>\n//           <input type=\"file\" name=\"image\" onChange={handleChange} />\n//           {imagePreview && (\n//             <img\n//               src={imagePreview}\n//               alt=\"Preview\"\n//               style={{ width: '200px', marginTop: '10px', borderRadius: '10px' }}\n//             />\n//           )}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Name of the donor:</label>\n//           <input\n//             type=\"text\"\n//             name=\"donorName\"\n//             value={formData.donorName}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Contact details of the donor:</label>\n//           <input\n//             type=\"text\"\n//             name=\"donorPhone\"\n//             placeholder=\"Phone Number\"\n//             value={formData.donorPhone}\n//             onChange={handleChange}\n//             required\n//           />\n//           <input\n//             type=\"email\"\n//             name=\"donorEmail\"\n//             placeholder=\"Email Address\"\n//             value={formData.donorEmail}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Address:</label>\n//           <textarea\n//             name=\"donorAddress\"\n//             value={formData.donorAddress}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n\n//         <button type=\"submit\" className=\"submit-btn\">\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Donate;","map":{"version":3,"names":[],"sources":["C:/Users/Sravy/meal-bridge/client/src/pages/Donate.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom'; // Required for redirection\r\n// import './Donate.css';\r\n\r\n// const Donate = () => {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     locality: '',\r\n//     items: [{ name: '', quantity: '' }],\r\n//     timeBeforeConsumption: '',\r\n//     donorName: '',\r\n//     donorPhone: '',\r\n//     donorEmail: '',\r\n//     donorAddress: '',\r\n//     image: null\r\n//   });\r\n\r\n//   const [imagePreview, setImagePreview] = useState(null);\r\n\r\n//   const handleItemChange = (index, event) => {\r\n//     const newItems = [...formData.items];\r\n//     newItems[index][event.target.name] = event.target.value;\r\n//     setFormData({ ...formData, items: newItems });\r\n//   };\r\n\r\n//   const addItemField = () => {\r\n//     setFormData({ ...formData, items: [...formData.items, { name: '', quantity: '' }] });\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value, files } = e.target;\r\n//     if (name === 'image') {\r\n//       const file = files[0];\r\n//       setFormData({ ...formData, image: file });\r\n//       setImagePreview(URL.createObjectURL(file)); // Preview URL\r\n//     } else {\r\n//       setFormData({ ...formData, [name]: value });\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     console.log(formData);\r\n\r\n//     // Here you can POST formData to a server or context/store\r\n\r\n//     // Redirect to donations page\r\n//     navigate('/donations');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"donate-container\">\r\n//       <form className=\"donate-form\" onSubmit={handleSubmit}>\r\n//         <div className=\"form-group locality-select\">\r\n//           <label>Select your locality:</label>\r\n//           <select name=\"locality\" value={formData.locality} onChange={handleChange} required>\r\n//             <option value=\"\">-- Select Locality --</option>\r\n//             <option value=\"Central\">Central</option>\r\n//             <option value=\"North\">North</option>\r\n//             <option value=\"East\">East</option>\r\n//             <option value=\"South\">South</option>\r\n//             <option value=\"West\">West</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className=\"form-group items-grid\">\r\n//           <label>Item(s):</label>\r\n//           {formData.items.map((item, index) => (\r\n//             <div key={index} className=\"item-row\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Item Name\"\r\n//                 value={item.name}\r\n//                 onChange={(e) => handleItemChange(index, e)}\r\n//                 required\r\n//               />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"quantity\"\r\n//                 placeholder=\"Quantity\"\r\n//                 value={item.quantity}\r\n//                 onChange={(e) => handleItemChange(index, e)}\r\n//                 required\r\n//               />\r\n//             </div>\r\n//           ))}\r\n//           <button type=\"button\" onClick={addItemField} className=\"add-item-btn\">\r\n//             + Add another item\r\n//           </button>\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label>Time before they can be consumed:</label>\r\n//           <input\r\n//             type=\"datetime-local\"\r\n//             name=\"timeBeforeConsumption\"\r\n//             value={formData.timeBeforeConsumption}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label>Upload picture:</label>\r\n//           <input type=\"file\" name=\"image\" onChange={handleChange} />\r\n//           {imagePreview && (\r\n//             <img\r\n//               src={imagePreview}\r\n//               alt=\"Preview\"\r\n//               style={{ width: '200px', marginTop: '10px', borderRadius: '10px' }}\r\n//             />\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label>Name of the donor:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"donorName\"\r\n//             value={formData.donorName}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label>Contact details of the donor:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"donorPhone\"\r\n//             placeholder=\"Phone Number\"\r\n//             value={formData.donorPhone}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"donorEmail\"\r\n//             placeholder=\"Email Address\"\r\n//             value={formData.donorEmail}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label>Address:</label>\r\n//           <textarea\r\n//             name=\"donorAddress\"\r\n//             value={formData.donorAddress}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\" className=\"submit-btn\">\r\n//           Submit\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Donate;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}