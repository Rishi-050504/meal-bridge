{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sravy\\\\Desktop\\\\meal-bridge\\\\client\\\\src\\\\pages\\\\Donate.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './Donate.css';\n// import { useNavigate } from 'react-router-dom';\n// import localities from '../data/localities'; // Importing locality list\n\n// const Donate = () => {\n//   const [formData, setFormData] = useState({\n//     locality: '',\n//     items: [{ name: '', quantity: '' }],\n//     timeBeforeConsumption: '',\n//     donorName: '',\n//     donorPhone: '',\n//     donorEmail: '',\n//     donorAddress: '',\n//     images: [],\n//   });\n\n//   const [imagePreviews, setImagePreviews] = useState([]);\n//   const navigate = useNavigate();\n\n//   const handleItemChange = (index, event) => {\n//     const newItems = [...formData.items];\n//     newItems[index][event.target.name] = event.target.value;\n//     setFormData({ ...formData, items: newItems });\n//   };\n\n//   const addItemField = () => {\n//     setFormData({\n//       ...formData,\n//       items: [...formData.items, { name: '', quantity: '' }],\n//     });\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value, files } = e.target;\n//     if (name === 'images') {\n//       const fileArray = Array.from(files);\n//       setFormData({ ...formData, images: [...formData.images, ...fileArray] });\n\n//       const previewUrls = fileArray.map((file) =>\n//         URL.createObjectURL(file)\n//       );\n//       setImagePreviews((prev) => [...prev, ...previewUrls]);\n//     } else {\n//       setFormData({ ...formData, [name]: value });\n//     }\n//   };\n\n//   const removeImage = (indexToRemove) => {\n//     const updatedImages = formData.images.filter(\n//       (_, i) => i !== indexToRemove\n//     );\n//     const updatedPreviews = imagePreviews.filter(\n//       (_, i) => i !== indexToRemove\n//     );\n//     setFormData({ ...formData, images: updatedImages });\n//     setImagePreviews(updatedPreviews);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // Send to backend\n//     try {\n//       const form = new FormData();\n//       form.append('locality', formData.locality);\n//       form.append('timeBeforeConsumption', formData.timeBeforeConsumption);\n//       form.append('donorName', formData.donorName);\n//       form.append('donorPhone', formData.donorPhone);\n//       form.append('donorEmail', formData.donorEmail);\n//       form.append('donorAddress', formData.donorAddress);\n//       form.append('items', JSON.stringify(formData.items));\n\n//       formData.images.forEach((img) => {\n//         form.append('images', img);\n//       });\n\n//       const res = await fetch('http://localhost:5000/api/donations', {\n//         method: 'POST',\n//         body: form,\n//       });\n\n//       const result = await res.json();\n\n//       if (res.ok) {\n//         alert('Donation submitted successfully!');\n//         navigate('/donations');\n//       } else {\n//         alert(result.message || 'Failed to submit donation.');\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       alert('An error occurred.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"donate-background\">\n//       <div className=\"donate-overlay\" />\n//       <div className=\"donate-container\">\n//         <form className=\"donate-form\" onSubmit={handleSubmit}>\n//           {/* Locality Dropdown */}\n//           <div className=\"form-group locality-select\">\n//             <label>Select your locality:</label>\n//             <select\n//               name=\"locality\"\n//               value={formData.locality}\n//               onChange={handleChange}\n//               required\n//             >\n//               <option value=\"\">-- Select Locality --</option>\n//               {localities.map((area, index) => (\n//                 <option key={index} value={area}>\n//                   {area}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Items Section */}\n//           <div className=\"form-group items-grid\">\n//             <label>Item(s):</label>\n//             {formData.items.map((item, index) => (\n//               <div key={index} className=\"item-row\">\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   placeholder=\"Item Name\"\n//                   value={item.name}\n//                   onChange={(e) => handleItemChange(index, e)}\n//                   required\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"quantity\"\n//                   placeholder=\"Quantity\"\n//                   value={item.quantity}\n//                   onChange={(e) => handleItemChange(index, e)}\n//                   required\n//                 />\n//               </div>\n//             ))}\n//             <button type=\"button\" onClick={addItemField} className=\"add-item-btn\">\n//               + Add another item\n//             </button>\n//           </div>\n\n//           {/* Time Before Consumption */}\n//           <div className=\"form-group\">\n//             <label>Time before they can be consumed:</label>\n//             <input\n//               type=\"datetime-local\"\n//               name=\"timeBeforeConsumption\"\n//               value={formData.timeBeforeConsumption}\n//               onChange={handleChange}\n//               required\n//             />\n//           </div>\n\n//           {/* Image Upload */}\n//           <div className=\"form-group\">\n//             <label>Upload picture(s):</label>\n//             <input\n//               type=\"file\"\n//               name=\"images\"\n//               onChange={handleChange}\n//               multiple\n//               accept=\"image/*\"\n//             />\n//             <div className=\"image-preview-grid\">\n//               {imagePreviews.map((src, index) => (\n//                 <div key={index} className=\"image-preview-section\">\n//                   <img\n//                     src={src}\n//                     alt={`Preview ${index}`}\n//                     className=\"image-preview\"\n//                   />\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => removeImage(index)}\n//                     className=\"remove-image-btn\"\n//                   >\n//                     Remove\n//                   </button>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* Donor Name */}\n//           <div className=\"form-group\">\n//             <label>Name of the donor:</label>\n//             <input\n//               type=\"text\"\n//               name=\"donorName\"\n//               value={formData.donorName}\n//               onChange={handleChange}\n//               required\n//             />\n//           </div>\n\n//           {/* Donor Contact */}\n//           <div className=\"form-group\">\n//             <label>Contact details of the donor:</label>\n//             <input\n//               type=\"text\"\n//               name=\"donorPhone\"\n//               placeholder=\"Phone Number\"\n//               value={formData.donorPhone}\n//               onChange={handleChange}\n//               required\n//             />\n//             <input\n//               type=\"email\"\n//               name=\"donorEmail\"\n//               placeholder=\"Email Address\"\n//               value={formData.donorEmail}\n//               onChange={handleChange}\n//               required\n//             />\n//           </div>\n\n//           {/* Donor Address */}\n//           <div className=\"form-group\">\n//             <label>Address:</label>\n//             <textarea\n//               name=\"donorAddress\"\n//               value={formData.donorAddress}\n//               onChange={handleChange}\n//               required\n//             />\n//           </div>\n\n//           {/* Submit */}\n//           <button type=\"submit\" className=\"submit-btn\">\n//             Submit\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Donate;\n\nimport React, { useState } from 'react';\nimport './Donate.css';\nimport { useNavigate } from 'react-router-dom';\nimport localities from '../data/localities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Donate = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    locality: '',\n    items: [{\n      name: '',\n      quantity: ''\n    }],\n    timeBeforeConsumption: '',\n    donorName: '',\n    donorPhone: '',\n    donorEmail: '',\n    donorAddress: '',\n    images: []\n  });\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const navigate = useNavigate();\n  const handleItemChange = (index, event) => {\n    const newItems = [...formData.items];\n    newItems[index][event.target.name] = event.target.value;\n    setFormData({\n      ...formData,\n      items: newItems\n    });\n  };\n  const addItemField = () => {\n    setFormData({\n      ...formData,\n      items: [...formData.items, {\n        name: '',\n        quantity: ''\n      }]\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (name === 'images') {\n      const fileArray = Array.from(files);\n      setFormData(prev => ({\n        ...prev,\n        images: [...prev.images, ...fileArray]\n      }));\n      const previews = fileArray.map(file => URL.createObjectURL(file));\n      setImagePreviews(prev => [...prev, ...previews]);\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const removeImage = indexToRemove => {\n    const updatedImages = formData.images.filter((_, i) => i !== indexToRemove);\n    const updatedPreviews = imagePreviews.filter((_, i) => i !== indexToRemove);\n    setFormData({\n      ...formData,\n      images: updatedImages\n    });\n    setImagePreviews(updatedPreviews);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const submission = new FormData();\n      submission.append('locality', formData.locality);\n      submission.append('timeBeforeConsumption', formData.timeBeforeConsumption);\n      submission.append('donorName', formData.donorName);\n      submission.append('donorPhone', formData.donorPhone);\n      submission.append('donorEmail', formData.donorEmail);\n      submission.append('donorAddress', formData.donorAddress);\n      submission.append('items', JSON.stringify(formData.items)); // send as JSON string\n\n      formData.images.forEach(img => submission.append('images', img));\n      const res = await fetch('http://localhost:5000/api/donations', {\n        method: 'POST',\n        body: submission\n      });\n      if (res.ok) {\n        navigate('/donations');\n      } else {\n        alert('Failed to submit donation');\n      }\n    } catch (err) {\n      console.error('Error submitting donation:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"donate-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donate-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donate-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"donate-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group locality-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select your locality:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"locality\",\n            value: formData.locality,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Locality --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), localities.map((area, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: area,\n              children: area\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group items-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Item(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), formData.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"Item Name\",\n              value: item.name,\n              onChange: e => handleItemChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"quantity\",\n              placeholder: \"Quantity\",\n              value: item.quantity,\n              onChange: e => handleItemChange(index, e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addItemField,\n            className: \"add-item-btn\",\n            children: \"+ Add another item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time before consumption:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            name: \"timeBeforeConsumption\",\n            value: formData.timeBeforeConsumption,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload picture(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"images\",\n            onChange: handleChange,\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview-grid\",\n            children: imagePreviews.map((src, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-preview-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: src,\n                alt: `Preview ${index}`,\n                className: \"image-preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeImage(index),\n                className: \"remove-image-btn\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name of the donor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"donorName\",\n            value: formData.donorName,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Contact details of the donor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"donorPhone\",\n            placeholder: \"Phone Number\",\n            value: formData.donorPhone,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"donorEmail\",\n            placeholder: \"Email Address\",\n            value: formData.donorEmail,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"donorAddress\",\n            value: formData.donorAddress,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s(Donate, \"llqZq+gq207fV5NX7bZk6M2zGQA=\", false, function () {\n  return [useNavigate];\n});\n_c = Donate;\nexport default Donate;\nvar _c;\n$RefreshReg$(_c, \"Donate\");","map":{"version":3,"names":["React","useState","useNavigate","localities","jsxDEV","_jsxDEV","Donate","_s","formData","setFormData","locality","items","name","quantity","timeBeforeConsumption","donorName","donorPhone","donorEmail","donorAddress","images","imagePreviews","setImagePreviews","navigate","handleItemChange","index","event","newItems","target","value","addItemField","handleChange","e","files","fileArray","Array","from","prev","previews","map","file","URL","createObjectURL","removeImage","indexToRemove","updatedImages","filter","_","i","updatedPreviews","handleSubmit","preventDefault","submission","FormData","append","JSON","stringify","forEach","img","res","fetch","method","body","ok","alert","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","area","item","type","placeholder","onClick","multiple","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Sravy/Desktop/meal-bridge/client/src/pages/Donate.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import './Donate.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import localities from '../data/localities'; // Importing locality list\r\n\r\n// const Donate = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     locality: '',\r\n//     items: [{ name: '', quantity: '' }],\r\n//     timeBeforeConsumption: '',\r\n//     donorName: '',\r\n//     donorPhone: '',\r\n//     donorEmail: '',\r\n//     donorAddress: '',\r\n//     images: [],\r\n//   });\r\n\r\n//   const [imagePreviews, setImagePreviews] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleItemChange = (index, event) => {\r\n//     const newItems = [...formData.items];\r\n//     newItems[index][event.target.name] = event.target.value;\r\n//     setFormData({ ...formData, items: newItems });\r\n//   };\r\n\r\n//   const addItemField = () => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       items: [...formData.items, { name: '', quantity: '' }],\r\n//     });\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value, files } = e.target;\r\n//     if (name === 'images') {\r\n//       const fileArray = Array.from(files);\r\n//       setFormData({ ...formData, images: [...formData.images, ...fileArray] });\r\n\r\n//       const previewUrls = fileArray.map((file) =>\r\n//         URL.createObjectURL(file)\r\n//       );\r\n//       setImagePreviews((prev) => [...prev, ...previewUrls]);\r\n//     } else {\r\n//       setFormData({ ...formData, [name]: value });\r\n//     }\r\n//   };\r\n\r\n//   const removeImage = (indexToRemove) => {\r\n//     const updatedImages = formData.images.filter(\r\n//       (_, i) => i !== indexToRemove\r\n//     );\r\n//     const updatedPreviews = imagePreviews.filter(\r\n//       (_, i) => i !== indexToRemove\r\n//     );\r\n//     setFormData({ ...formData, images: updatedImages });\r\n//     setImagePreviews(updatedPreviews);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Send to backend\r\n//     try {\r\n//       const form = new FormData();\r\n//       form.append('locality', formData.locality);\r\n//       form.append('timeBeforeConsumption', formData.timeBeforeConsumption);\r\n//       form.append('donorName', formData.donorName);\r\n//       form.append('donorPhone', formData.donorPhone);\r\n//       form.append('donorEmail', formData.donorEmail);\r\n//       form.append('donorAddress', formData.donorAddress);\r\n//       form.append('items', JSON.stringify(formData.items));\r\n\r\n//       formData.images.forEach((img) => {\r\n//         form.append('images', img);\r\n//       });\r\n\r\n//       const res = await fetch('http://localhost:5000/api/donations', {\r\n//         method: 'POST',\r\n//         body: form,\r\n//       });\r\n\r\n//       const result = await res.json();\r\n\r\n//       if (res.ok) {\r\n//         alert('Donation submitted successfully!');\r\n//         navigate('/donations');\r\n//       } else {\r\n//         alert(result.message || 'Failed to submit donation.');\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert('An error occurred.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"donate-background\">\r\n//       <div className=\"donate-overlay\" />\r\n//       <div className=\"donate-container\">\r\n//         <form className=\"donate-form\" onSubmit={handleSubmit}>\r\n//           {/* Locality Dropdown */}\r\n//           <div className=\"form-group locality-select\">\r\n//             <label>Select your locality:</label>\r\n//             <select\r\n//               name=\"locality\"\r\n//               value={formData.locality}\r\n//               onChange={handleChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\">-- Select Locality --</option>\r\n//               {localities.map((area, index) => (\r\n//                 <option key={index} value={area}>\r\n//                   {area}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Items Section */}\r\n//           <div className=\"form-group items-grid\">\r\n//             <label>Item(s):</label>\r\n//             {formData.items.map((item, index) => (\r\n//               <div key={index} className=\"item-row\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"name\"\r\n//                   placeholder=\"Item Name\"\r\n//                   value={item.name}\r\n//                   onChange={(e) => handleItemChange(index, e)}\r\n//                   required\r\n//                 />\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"quantity\"\r\n//                   placeholder=\"Quantity\"\r\n//                   value={item.quantity}\r\n//                   onChange={(e) => handleItemChange(index, e)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//             ))}\r\n//             <button type=\"button\" onClick={addItemField} className=\"add-item-btn\">\r\n//               + Add another item\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Time Before Consumption */}\r\n//           <div className=\"form-group\">\r\n//             <label>Time before they can be consumed:</label>\r\n//             <input\r\n//               type=\"datetime-local\"\r\n//               name=\"timeBeforeConsumption\"\r\n//               value={formData.timeBeforeConsumption}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Image Upload */}\r\n//           <div className=\"form-group\">\r\n//             <label>Upload picture(s):</label>\r\n//             <input\r\n//               type=\"file\"\r\n//               name=\"images\"\r\n//               onChange={handleChange}\r\n//               multiple\r\n//               accept=\"image/*\"\r\n//             />\r\n//             <div className=\"image-preview-grid\">\r\n//               {imagePreviews.map((src, index) => (\r\n//                 <div key={index} className=\"image-preview-section\">\r\n//                   <img\r\n//                     src={src}\r\n//                     alt={`Preview ${index}`}\r\n//                     className=\"image-preview\"\r\n//                   />\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => removeImage(index)}\r\n//                     className=\"remove-image-btn\"\r\n//                   >\r\n//                     Remove\r\n//                   </button>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Donor Name */}\r\n//           <div className=\"form-group\">\r\n//             <label>Name of the donor:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"donorName\"\r\n//               value={formData.donorName}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Donor Contact */}\r\n//           <div className=\"form-group\">\r\n//             <label>Contact details of the donor:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"donorPhone\"\r\n//               placeholder=\"Phone Number\"\r\n//               value={formData.donorPhone}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"donorEmail\"\r\n//               placeholder=\"Email Address\"\r\n//               value={formData.donorEmail}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Donor Address */}\r\n//           <div className=\"form-group\">\r\n//             <label>Address:</label>\r\n//             <textarea\r\n//               name=\"donorAddress\"\r\n//               value={formData.donorAddress}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Submit */}\r\n//           <button type=\"submit\" className=\"submit-btn\">\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Donate;\r\n\r\nimport React, { useState } from 'react';\r\nimport './Donate.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport localities from '../data/localities';\r\n\r\nconst Donate = () => {\r\n  const [formData, setFormData] = useState({\r\n    locality: '',\r\n    items: [{ name: '', quantity: '' }],\r\n    timeBeforeConsumption: '',\r\n    donorName: '',\r\n    donorPhone: '',\r\n    donorEmail: '',\r\n    donorAddress: '',\r\n    images: [],\r\n  });\r\n\r\n  const [imagePreviews, setImagePreviews] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleItemChange = (index, event) => {\r\n    const newItems = [...formData.items];\r\n    newItems[index][event.target.name] = event.target.value;\r\n    setFormData({ ...formData, items: newItems });\r\n  };\r\n\r\n  const addItemField = () => {\r\n    setFormData({ ...formData, items: [...formData.items, { name: '', quantity: '' }] });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n    if (name === 'images') {\r\n      const fileArray = Array.from(files);\r\n      setFormData((prev) => ({ ...prev, images: [...prev.images, ...fileArray] }));\r\n\r\n      const previews = fileArray.map((file) => URL.createObjectURL(file));\r\n      setImagePreviews((prev) => [...prev, ...previews]);\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const removeImage = (indexToRemove) => {\r\n    const updatedImages = formData.images.filter((_, i) => i !== indexToRemove);\r\n    const updatedPreviews = imagePreviews.filter((_, i) => i !== indexToRemove);\r\n    setFormData({ ...formData, images: updatedImages });\r\n    setImagePreviews(updatedPreviews);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const submission = new FormData();\r\n\r\n      submission.append('locality', formData.locality);\r\n      submission.append('timeBeforeConsumption', formData.timeBeforeConsumption);\r\n      submission.append('donorName', formData.donorName);\r\n      submission.append('donorPhone', formData.donorPhone);\r\n      submission.append('donorEmail', formData.donorEmail);\r\n      submission.append('donorAddress', formData.donorAddress);\r\n      submission.append('items', JSON.stringify(formData.items)); // send as JSON string\r\n\r\n      formData.images.forEach((img) => submission.append('images', img));\r\n\r\n      const res = await fetch('http://localhost:5000/api/donations', {\r\n        method: 'POST',\r\n        body: submission,\r\n      });\r\n\r\n      if (res.ok) {\r\n        navigate('/donations');\r\n      } else {\r\n        alert('Failed to submit donation');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error submitting donation:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"donate-background\">\r\n      <div className=\"donate-overlay\" />\r\n      <div className=\"donate-container\">\r\n        <form className=\"donate-form\" onSubmit={handleSubmit}>\r\n          {/* Locality Dropdown */}\r\n          <div className=\"form-group locality-select\">\r\n            <label>Select your locality:</label>\r\n            <select\r\n              name=\"locality\"\r\n              value={formData.locality}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"\">-- Select Locality --</option>\r\n              {localities.map((area, index) => (\r\n                <option key={index} value={area}>{area}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Items */}\r\n          <div className=\"form-group items-grid\">\r\n            <label>Item(s):</label>\r\n            {formData.items.map((item, index) => (\r\n              <div key={index} className=\"item-row\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Item Name\"\r\n                  value={item.name}\r\n                  onChange={(e) => handleItemChange(index, e)}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"quantity\"\r\n                  placeholder=\"Quantity\"\r\n                  value={item.quantity}\r\n                  onChange={(e) => handleItemChange(index, e)}\r\n                  required\r\n                />\r\n              </div>\r\n            ))}\r\n            <button type=\"button\" onClick={addItemField} className=\"add-item-btn\">\r\n              + Add another item\r\n            </button>\r\n          </div>\r\n\r\n          {/* Time Before Consumption */}\r\n          <div className=\"form-group\">\r\n            <label>Time before consumption:</label>\r\n            <input\r\n              type=\"datetime-local\"\r\n              name=\"timeBeforeConsumption\"\r\n              value={formData.timeBeforeConsumption}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Image Upload */}\r\n          <div className=\"form-group\">\r\n            <label>Upload picture(s):</label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"images\"\r\n              onChange={handleChange}\r\n              multiple\r\n            />\r\n            <div className=\"image-preview-grid\">\r\n              {imagePreviews.map((src, index) => (\r\n                <div key={index} className=\"image-preview-section\">\r\n                  <img src={src} alt={`Preview ${index}`} className=\"image-preview\" />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => removeImage(index)}\r\n                    className=\"remove-image-btn\"\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Donor Details */}\r\n          <div className=\"form-group\">\r\n            <label>Name of the donor:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"donorName\"\r\n              value={formData.donorName}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Contact details of the donor:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"donorPhone\"\r\n              placeholder=\"Phone Number\"\r\n              value={formData.donorPhone}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              name=\"donorEmail\"\r\n              placeholder=\"Email Address\"\r\n              value={formData.donorEmail}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Address:</label>\r\n            <textarea\r\n              name=\"donorAddress\"\r\n              value={formData.donorAddress}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Donate;\r\n"],"mappings":";;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,SAASC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}