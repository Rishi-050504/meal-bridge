{"ast":null,"code":"// import axios from 'axios';\n\n// const BASE_URL = 'http://localhost:5000/api/auth';\n\n// // ✅ Register new user\n// export const registerUser = async (data) => {\n//   try {\n//     const res = await axios.post(`${BASE_URL}/register`, data);\n//     localStorage.setItem('token', res.data.token);\n//     return true;\n//   } catch (err) {\n//     alert(err.response?.data?.message || \"Registration failed\");\n//     return false;\n//   }\n// };\n\n// // ✅ Login user\n// export const loginUser = async (data) => {\n//   try {\n//     const res = await axios.post(`${BASE_URL}/login`, data);\n//     localStorage.setItem('token', res.data.token);\n//     return true;\n//   } catch (err) {\n//     alert(err.response?.data?.message || \"Login failed\");\n//     return false;\n//   }\n// };\n\n// ✅ Request password reset (Forgot Password)\nexport const requestPasswordReset = async email => {\n  try {\n    const res = await axios.post(`${BASE_URL}/forgot-password`, {\n      email\n    });\n    return res.data; // you can show success message to user\n  } catch (err) {\n    var _err$response, _err$response$data;\n    throw new Error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to request password reset');\n  }\n};","map":{"version":3,"names":["requestPasswordReset","email","res","axios","post","BASE_URL","data","err","_err$response","_err$response$data","Error","response","message"],"sources":["C:/Users/Sravy/Desktop/meal-bridge/client/src/api/auth.js"],"sourcesContent":["\r\n// import axios from 'axios';\r\n\r\n// const BASE_URL = 'http://localhost:5000/api/auth';\r\n\r\n// // ✅ Register new user\r\n// export const registerUser = async (data) => {\r\n//   try {\r\n//     const res = await axios.post(`${BASE_URL}/register`, data);\r\n//     localStorage.setItem('token', res.data.token);\r\n//     return true;\r\n//   } catch (err) {\r\n//     alert(err.response?.data?.message || \"Registration failed\");\r\n//     return false;\r\n//   }\r\n// };\r\n\r\n// // ✅ Login user\r\n// export const loginUser = async (data) => {\r\n//   try {\r\n//     const res = await axios.post(`${BASE_URL}/login`, data);\r\n//     localStorage.setItem('token', res.data.token);\r\n//     return true;\r\n//   } catch (err) {\r\n//     alert(err.response?.data?.message || \"Login failed\");\r\n//     return false;\r\n//   }\r\n// };\r\n\r\n// ✅ Request password reset (Forgot Password)\r\nexport const requestPasswordReset = async (email) => {\r\n  try {\r\n    const res = await axios.post(`${BASE_URL}/forgot-password`, { email });\r\n    return res.data; // you can show success message to user\r\n  } catch (err) {\r\n    throw new Error(err.response?.data?.message || 'Failed to request password reset');\r\n  }\r\n};\r\n"],"mappings":"AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMA,oBAAoB,GAAG,MAAOC,KAAK,IAAK;EACnD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,GAAGC,QAAQ,kBAAkB,EAAE;MAAEJ;IAAM,CAAC,CAAC;IACtE,OAAOC,GAAG,CAACI,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACZ,MAAM,IAAIC,KAAK,CAAC,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,kCAAkC,CAAC;EACpF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}