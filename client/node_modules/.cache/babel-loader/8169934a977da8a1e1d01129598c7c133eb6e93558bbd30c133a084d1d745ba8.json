{"ast":null,"code":"// import React, { useState } from 'react';\n// import './Donate.css';\n// import { useNavigate } from 'react-router-dom';\n// import localities from '../data/localities'; // ✅ Import the list\n\n// const Donate = () => {\n//   const [formData, setFormData] = useState({\n//     locality: '',\n//     items: [{ name: '', quantity: '' }],\n//     timeBeforeConsumption: '',\n//     donorName: '',\n//     donorPhone: '',\n//     donorEmail: '',\n//     donorAddress: '',\n//     images: [],\n//   });\n\n//   const [imagePreviews, setImagePreviews] = useState([]);\n//   const navigate = useNavigate();\n\n//   const handleItemChange = (index, event) => {\n//     const newItems = [...formData.items];\n//     newItems[index][event.target.name] = event.target.value;\n//     setFormData({ ...formData, items: newItems });\n//   };\n\n//   const addItemField = () => {\n//     setFormData({ ...formData, items: [...formData.items, { name: '', quantity: '' }] });\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value, files } = e.target;\n//     if (name === 'images') {\n//       const fileArray = Array.from(files);\n//       setFormData({ ...formData, images: [...formData.images, ...fileArray] });\n\n//       const previewUrls = fileArray.map((file) => URL.createObjectURL(file));\n//       setImagePreviews((prev) => [...prev, ...previewUrls]);\n//     } else {\n//       setFormData({ ...formData, [name]: value });\n//     }\n//   };\n\n//   const removeImage = (indexToRemove) => {\n//     const updatedImages = formData.images.filter((_, i) => i !== indexToRemove);\n//     const updatedPreviews = imagePreviews.filter((_, i) => i !== indexToRemove);\n//     setFormData({ ...formData, images: updatedImages });\n//     setImagePreviews(updatedPreviews);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log(formData); // Replace with API call later\n//     navigate('/donations');\n//   };\n\n//   return (\n//     <div className=\"donate-background\">\n//       <div className=\"donate-overlay\" />\n//       <div className=\"donate-container\">\n//         <form className=\"donate-form\" onSubmit={handleSubmit}>\n\n//           {/* Locality Dropdown */}\n//           <div className=\"form-group locality-select\">\n//             <label>Select your locality:</label>\n//             <select\n//               name=\"locality\"\n//               value={formData.locality}\n//               onChange={handleChange}\n//               required\n//             >\n//               <option value=\"\">-- Select Locality --</option>\n//               {localities.map((area, index) => (\n//                 <option key={index} value={area}>{area}</option>\n//               ))}\n//             </select>\n//           </div>\n\n//           {/* Items Section */}\n//           <div className=\"form-group items-grid\">\n//             <label>Item(s):</label>\n//             {formData.items.map((item, index) => (\n//               <div key={index} className=\"item-row\">\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   placeholder=\"Item Name\"\n//                   value={item.name}\n//                   onChange={(e) => handleItemChange(index, e)}\n//                   required\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"quantity\"\n//                   placeholder=\"Quantity\"\n//                   value={item.quantity}\n//                   onChange={(e) => handleItemChange(index, e)}\n//                   required\n//                 />\n//               </div>\n//             ))}\n//             <button type=\"button\" onClick={addItemField} className=\"add-item-btn\">\n//               + Add another item\n//             </button>\n//           </div>\n\n//           {/* Time Before Consumption */}\n//           <div className=\"form-group\">\n//             <label>Time before they can be consumed:</label>\n//             <input\n//               type=\"datetime-local\"\n//               name=\"timeBeforeConsumption\"\n//               value={formData.timeBeforeConsumption}\n//               onChange={handleChange}\n//               required\n//             />\n//           </div>\n\n//           {/* Image Upload */}\n//           <div className=\"form-group\">\n//             <label>Upload picture(s):</label>\n//             <input\n//               type=\"file\"\n//               name=\"images\"\n//               onChange={handleChange}\n//               multiple\n//             />\n//             <div className=\"image-preview-grid\">\n//               {imagePreviews.map((src, index) => (\n//                 <div key={index} className=\"image-preview-section\">\n//                   <img src={src} alt={`Preview ${index}`} className=\"image-preview\" />\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => removeImage(index)}\n//                     className=\"remove-image-btn\"\n//                   >\n//                     Remove\n//                   </button>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* Donor Name */}\n//           <div className=\"form-group\">\n//             <label>Name of the donor:</label>\n//             <input\n//               type=\"text\"\n//               name=\"donorName\"\n//               value={formData.donorName}\n//               onChange={handleChange}\n//               required\n//             />\n//           </div>\n\n//           {/* Donor Contact */}\n//           <div className=\"form-group\">\n//             <label>Contact details of the donor:</label>\n//             <input\n//               type=\"text\"\n//               name=\"donorPhone\"\n//               placeholder=\"Phone Number\"\n//               value={formData.donorPhone}\n//               onChange={handleChange}\n//               required\n//             />\n//             <input\n//               type=\"email\"\n//               name=\"donorEmail\"\n//               placeholder=\"Email Address\"\n//               value={formData.donorEmail}\n//               onChange={handleChange}\n//               required\n//             />\n//           </div>\n\n//           {/* Donor Address */}\n//           <div className=\"form-group\">\n//             <label>Address:</label>\n//             <textarea\n//               name=\"donorAddress\"\n//               value={formData.donorAddress}\n//               onChange={handleChange}\n//               required\n//             />\n//           </div>\n\n//           {/* Submit */}\n//           <button type=\"submit\" className=\"submit-btn\">Submit</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n\n//   const payload = {\n//     ...formData,\n//     images: imagePreviews, // In real app you'd upload images & save URLs\n//   };\n\n//   try {\n//     const res = await fetch('http://localhost:5000/api/donations', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(payload),\n//     });\n\n//     if (res.ok) {\n//       alert('Donation submitted successfully!');\n//       navigate('/donations');\n//     } else {\n//       alert('Failed to submit donation.');\n//     }\n//   } catch (err) {\n//     console.error('Submit error:', err);\n//     alert('Error submitting donation.');\n//   }\n// };\n\n// export default Donate;","map":{"version":3,"names":[],"sources":["C:/Users/Sravy/Desktop/meal-bridge/client/src/pages/Donate.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './Donate.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import localities from '../data/localities'; // ✅ Import the list\r\n\r\n// const Donate = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     locality: '',\r\n//     items: [{ name: '', quantity: '' }],\r\n//     timeBeforeConsumption: '',\r\n//     donorName: '',\r\n//     donorPhone: '',\r\n//     donorEmail: '',\r\n//     donorAddress: '',\r\n//     images: [],\r\n//   });\r\n\r\n//   const [imagePreviews, setImagePreviews] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleItemChange = (index, event) => {\r\n//     const newItems = [...formData.items];\r\n//     newItems[index][event.target.name] = event.target.value;\r\n//     setFormData({ ...formData, items: newItems });\r\n//   };\r\n\r\n//   const addItemField = () => {\r\n//     setFormData({ ...formData, items: [...formData.items, { name: '', quantity: '' }] });\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value, files } = e.target;\r\n//     if (name === 'images') {\r\n//       const fileArray = Array.from(files);\r\n//       setFormData({ ...formData, images: [...formData.images, ...fileArray] });\r\n\r\n//       const previewUrls = fileArray.map((file) => URL.createObjectURL(file));\r\n//       setImagePreviews((prev) => [...prev, ...previewUrls]);\r\n//     } else {\r\n//       setFormData({ ...formData, [name]: value });\r\n//     }\r\n//   };\r\n\r\n//   const removeImage = (indexToRemove) => {\r\n//     const updatedImages = formData.images.filter((_, i) => i !== indexToRemove);\r\n//     const updatedPreviews = imagePreviews.filter((_, i) => i !== indexToRemove);\r\n//     setFormData({ ...formData, images: updatedImages });\r\n//     setImagePreviews(updatedPreviews);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     console.log(formData); // Replace with API call later\r\n//     navigate('/donations');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"donate-background\">\r\n//       <div className=\"donate-overlay\" />\r\n//       <div className=\"donate-container\">\r\n//         <form className=\"donate-form\" onSubmit={handleSubmit}>\r\n          \r\n//           {/* Locality Dropdown */}\r\n//           <div className=\"form-group locality-select\">\r\n//             <label>Select your locality:</label>\r\n//             <select\r\n//               name=\"locality\"\r\n//               value={formData.locality}\r\n//               onChange={handleChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\">-- Select Locality --</option>\r\n//               {localities.map((area, index) => (\r\n//                 <option key={index} value={area}>{area}</option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n\r\n//           {/* Items Section */}\r\n//           <div className=\"form-group items-grid\">\r\n//             <label>Item(s):</label>\r\n//             {formData.items.map((item, index) => (\r\n//               <div key={index} className=\"item-row\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"name\"\r\n//                   placeholder=\"Item Name\"\r\n//                   value={item.name}\r\n//                   onChange={(e) => handleItemChange(index, e)}\r\n//                   required\r\n//                 />\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"quantity\"\r\n//                   placeholder=\"Quantity\"\r\n//                   value={item.quantity}\r\n//                   onChange={(e) => handleItemChange(index, e)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//             ))}\r\n//             <button type=\"button\" onClick={addItemField} className=\"add-item-btn\">\r\n//               + Add another item\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Time Before Consumption */}\r\n//           <div className=\"form-group\">\r\n//             <label>Time before they can be consumed:</label>\r\n//             <input\r\n//               type=\"datetime-local\"\r\n//               name=\"timeBeforeConsumption\"\r\n//               value={formData.timeBeforeConsumption}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Image Upload */}\r\n//           <div className=\"form-group\">\r\n//             <label>Upload picture(s):</label>\r\n//             <input\r\n//               type=\"file\"\r\n//               name=\"images\"\r\n//               onChange={handleChange}\r\n//               multiple\r\n//             />\r\n//             <div className=\"image-preview-grid\">\r\n//               {imagePreviews.map((src, index) => (\r\n//                 <div key={index} className=\"image-preview-section\">\r\n//                   <img src={src} alt={`Preview ${index}`} className=\"image-preview\" />\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => removeImage(index)}\r\n//                     className=\"remove-image-btn\"\r\n//                   >\r\n//                     Remove\r\n//                   </button>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Donor Name */}\r\n//           <div className=\"form-group\">\r\n//             <label>Name of the donor:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"donorName\"\r\n//               value={formData.donorName}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Donor Contact */}\r\n//           <div className=\"form-group\">\r\n//             <label>Contact details of the donor:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"donorPhone\"\r\n//               placeholder=\"Phone Number\"\r\n//               value={formData.donorPhone}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"donorEmail\"\r\n//               placeholder=\"Email Address\"\r\n//               value={formData.donorEmail}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Donor Address */}\r\n//           <div className=\"form-group\">\r\n//             <label>Address:</label>\r\n//             <textarea\r\n//               name=\"donorAddress\"\r\n//               value={formData.donorAddress}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Submit */}\r\n//           <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n// const handleSubmit = async (e) => {\r\n//   e.preventDefault();\r\n\r\n//   const payload = {\r\n//     ...formData,\r\n//     images: imagePreviews, // In real app you'd upload images & save URLs\r\n//   };\r\n\r\n//   try {\r\n//     const res = await fetch('http://localhost:5000/api/donations', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(payload),\r\n//     });\r\n\r\n//     if (res.ok) {\r\n//       alert('Donation submitted successfully!');\r\n//       navigate('/donations');\r\n//     } else {\r\n//       alert('Failed to submit donation.');\r\n//     }\r\n//   } catch (err) {\r\n//     console.error('Submit error:', err);\r\n//     alert('Error submitting donation.');\r\n//   }\r\n// };\r\n\r\n// export default Donate;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}